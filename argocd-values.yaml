# Set up the argocd cuelang plugins

# configmaps
configs:
  cmp:
    create: true
    plugins:
      cuelang:
        # Init always happens immediately before generate, but its output is not treated as manifests.
        # This is a good place to, for example, download chart dependencies.
        # init:
        #   command: [sh]
        #   args: [-c, 'echo "Initializing..."']
        # The generate command runs in the Application source directory each time manifests are generated. Standard output
        # must be ONLY valid YAML manifests. A non-zero exit code will fail manifest generation.
        # Error output will be sent to the UI, so avoid printing sensitive information (such as secrets).
        generate:
          command: ["cue"]
          args: ["cmd", "dump", "./..."]
        # The discovery config is applied to a repository. If every configured discovery tool matches, then the plugin may be
        # used to generate manifests for Applications using the repository. If the discovery config is omitted then the plugin 
        # will not match any application but can still be invoked explicitly by specifying the plugin name in the app spec. 
        # Only one of fileName, find.glob, or find.command should be specified. If multiple are specified then only the 
        # first (in that order) is evaluated.
        discover:
          # fileName is a glob pattern (https://pkg.go.dev/path/filepath#Glob) that is applied to the repository's root 
          # directory (not the Application source directory). If there is a match, this plugin may be used for the repository.
          # fileName: "./subdir/s*.yaml"
          find:
            # This does the same thing as fileName, but it supports double-start (nested directory) glob patterns.
            glob: "**/*.cue"
            # The find command runs in the repository's root directory. To match, it must exit with status code 0 _and_ 
            # produce non-empty output to standard out.
            # command: [sh, -c, find . -name env.yaml]

# sidecar
repoServer:
  extraContainers:
    - name: cmp-cuelang
      command:
        - "/var/run/argocd/argocd-cmp-server"
      image: ghcr.io/mkantzer/k8splayground-argocd-cuelang:1.0.0
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        # Remove this volumeMount if you've chosen to bake the config file into the sidecar image.
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: cuelang.yaml
          name: argocd-cmp-cm
        # Starting with v2.4, do NOT mount the same tmp volume as the repo-server container. The filesystem separation helps
        # mitigate path traversal attacks.
        - mountPath: /tmp
          name: cmp-tmp
